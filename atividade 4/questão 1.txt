class Solution {
public:
    string longestDiverseString(int a, int b, int c) {
       priority_queue<pair<int,char>> pq;
        if(a!=0) pq.push({a,'a'});
        if(b!=0) pq.push({b,'b'});
        if(c!=0) pq.push({c,'c'});
        
        string work="";
        pair<int,char> prev={0,'#'};
        
        while(!pq.empty()){
            auto [value,ch]=pq.top();
            pq.pop();
            
            if(prev.first>0) pq.push(prev);
            
            if(value<prev.first){
                work.push_back(ch);
                prev={value-1,ch};
            }
            
            else{
                work.push_back(ch);
               if(value>1) work.push_back(ch);
                prev={value-2,ch};
            }
        }
        return work;
    }
        };